buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "SpongePowered"
            url = "https://repo.spongepowered.org/repository/maven-public/"
        }
        maven {
            name = "tigr.dev"
            url = "https://maven.tigr.dev"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:3+"
        classpath "org.spongepowered:mixingradle:0.7-SNAPSHOT"
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.4"
        classpath "dev.tigr.asmp:asmp-plugin:0.1-SNAPSHOT"
    }
}
apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.spongepowered.mixin"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "dev.tigr.asmp"

version = aresForgeVersion

asmp {
    input = "${buildDir.path}/extractSrg/output.srg"
    inputFormat = "TSRG"
    intermediaryInput = "${buildDir.path}/createMcpToSrg/output.tsrg"
    intermediaryInputFormat = "TSRG"
    mappingsName = "asmp.ares.notch.srg"
    intermediaryMappingsName = "asmp.ares.searge.srg"
    tasks = ["shadowJar"]
}

minecraft {
    mappings channel: "$project.mcpChannel", version: "$project.mcpVersion"
}

dependencies {
    // minecraftforge dependency
    minecraft "net.minecraftforge:forge:1.12.2-14.23.5.2854"

    // ares core
    implementation project(":ares-core")
    shadow(project(":ares-core")) {
        exclude group: "org.apache.logging.log4j", module: "log4j-api"
        exclude group: "com.mojang", module: "brigadier"
        exclude group: "com.google.guava", module: "guava"
    }

    // asmp
    implementation "dev.tigr.asmp:asmp-core:0.1-SNAPSHOT"
    shadow "dev.tigr.asmp:asmp-core:0.1-SNAPSHOT"
    implementation "dev.tigr.asmp:asmp-forge:0.1-SNAPSHOT"
    shadow "dev.tigr.asmp:asmp-forge:0.1-SNAPSHOT"
    annotationProcessor "dev.tigr.asmp:asmp-ap:0.1-SNAPSHOT"

    // mixins
    implementation "org.spongepowered:mixin:0.7.11-SNAPSHOT"
    shadow("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        exclude module: "launchwrapper"
        exclude module: "guava"
        exclude module: "gson"
        exclude module: "commons-io"
        exclude module: "log4j-core"
    }
    annotationProcessor("org.spongepowered:mixin:0.8.2:processor") {
        exclude module: "gson"
    }

    // ares installer
    implementation project(":ares-installer")
    shadow(project(":ares-installer"))

    // shadow ares core deps
    shadow "com.mojang:brigadier:1.0.17"
    shadow "com.github.Vatuu:discord-rpc:1.6.2"

    // mixins
    implementation "org.spongepowered:mixin:0.8.2"

    // baritone
    implementation "com.github.cabaletta:baritone:1.2.14"
    implementation "cabaletta:baritone-api:1.2"
    shadow ("cabaletta:baritone-api:1.2") {
        exclude group: "org.apache.logging.log4j", module: "log4j-api"
        exclude group: "com.mojang", module: "brigadier"
        exclude group: "com.google.guava", module: "guava"
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    exclude("dummyThing")
    exclude("LICENSE.txt")
    setClassifier("release")
}

mixin {
    defaultObfuscationEnv "searge"
    add sourceSets.main, "mixins.ares.refmap.json"
}

reobf {
    shadowJar {
        classpath = sourceSets.main.compileClasspath
    }
}
jar {
    manifest {
        attributes(
                "MixinConfigs": "mixins.ares.json",
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder": 0,
                "FMLCorePluginContainsFMLMod": "true",
                "FMLCorePlugin": "dev.tigr.ares.forge.asmp.ASMPLoader",
                "ForceLoadAsMod": "true",
                "Main-Class": "dev.tigr.ares.installer.Installer"
        )
    }
}

build.dependsOn(shadowJar)