package dev.tigr.ares.forge.impl.modules.exploit;

import dev.tigr.ares.core.feature.module.Category;
import dev.tigr.ares.core.feature.module.Module;
import dev.tigr.ares.core.setting.Setting;
import dev.tigr.ares.core.setting.settings.EnumSetting;
import dev.tigr.ares.forge.event.events.player.DamageBlockEvent;
import dev.tigr.ares.forge.event.events.player.PacketEvent;
import dev.tigr.simpleevents.listener.EventHandler;
import dev.tigr.simpleevents.listener.EventListener;
import net.minecraft.init.Blocks;
import net.minecraft.network.play.client.CPacketAnimation;
import net.minecraft.network.play.client.CPacketPlayerDigging;
import net.minecraft.util.math.BlockPos;

/**
 * @author Tigermouthbear
 */
@Module.Info(name = "NoSwing", description = "Prevents the swing animation for others", category = Category.EXPLOIT)
public class NoSwing extends Module {
    private final Setting<Mode> mode = register(new EnumSetting<>("Mode", Mode.NO_ANIMATION));
    
    @EventHandler
    public EventListener<PacketEvent.Sent> packetSentEvent = new EventListener<>(event -> {
        if(mode.getValue() == Mode.NO_ANIMATION && event.getPacket() instanceof CPacketAnimation)
            event.setCancelled(true);
    });

    //Migrating away from a forge event will help with porting to Fabric -Hoosiers
    @EventHandler
    public EventListener<DamageBlockEvent> damageBlockEventEventListener = new EventListener<>(event -> {
        if(mode.getValue() != Mode.PACKET_MINE) return;

        if(MC.gameSettings.keyBindAttack.isKeyDown() && MC.objectMouseOver.entityHit == null) {
            if(canBreakBlock(event.getBlockPos())) {
                MC.player.connection.sendPacket(new CPacketPlayerDigging(CPacketPlayerDigging.Action.START_DESTROY_BLOCK, event.getBlockPos(), event.getEnumFacing()));
                MC.player.connection.sendPacket(new CPacketPlayerDigging(CPacketPlayerDigging.Action.STOP_DESTROY_BLOCK, event.getBlockPos(), event.getEnumFacing()));
                event.setCancelled(true);
            }
        }
    });

    //We don't want to try to break something that is unbreakable
    private boolean canBreakBlock(BlockPos blockPos) {
        return !(MC.world.getBlockState(blockPos).getBlock() == Blocks.BEDROCK) || !(MC.world.getBlockState(blockPos).getBlock() == Blocks.BARRIER);
    }

    @Override
    public String getInfo() {
        return mode.getValue().name();
    }

    enum Mode {
        NO_ANIMATION, PACKET_MINE
    }
}
